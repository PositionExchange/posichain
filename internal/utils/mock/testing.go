// Code generated by MockGen. DO NOT EDIT.
// Source: testing.go

// Package mock_utils is a generated GoMock package.
package mock_utils

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTestLogger is a mock of TestLogger interface
type MockTestLogger struct {
	ctrl     *gomock.Controller
	recorder *MockTestLoggerMockRecorder
}

// MockTestLoggerMockRecorder is the mock recorder for MockTestLogger
type MockTestLoggerMockRecorder struct {
	mock *MockTestLogger
}

// NewMockTestLogger creates a new mock instance
func NewMockTestLogger(ctrl *gomock.Controller) *MockTestLogger {
	mock := &MockTestLogger{ctrl: ctrl}
	mock.recorder = &MockTestLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTestLogger) EXPECT() *MockTestLoggerMockRecorder {
	return m.recorder
}

// Log mocks base method
func (m *MockTestLogger) Log(args ...interface{}) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Log", varargs...)
}

// Log indicates an expected call of Log
func (mr *MockTestLoggerMockRecorder) Log(args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Log", reflect.TypeOf((*MockTestLogger)(nil).Log), args...)
}
